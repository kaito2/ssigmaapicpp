// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssigmaapi/productibit/v1/productibit.proto

#ifndef PROTOBUF_INCLUDED_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto
#define PROTOBUF_INCLUDED_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ssigmaapi/type/useractivity.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto 

namespace protobuf_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto
namespace ssigmaapi {
namespace productibit {
namespace v1 {
class SensorMessage;
class SensorMessageDefaultTypeInternal;
extern SensorMessageDefaultTypeInternal _SensorMessage_default_instance_;
}  // namespace v1
}  // namespace productibit
}  // namespace ssigmaapi
namespace google {
namespace protobuf {
template<> ::ssigmaapi::productibit::v1::SensorMessage* Arena::CreateMaybeMessage<::ssigmaapi::productibit::v1::SensorMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssigmaapi {
namespace productibit {
namespace v1 {

// ===================================================================

class SensorMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssigmaapi.productibit.v1.SensorMessage) */ {
 public:
  SensorMessage();
  virtual ~SensorMessage();

  SensorMessage(const SensorMessage& from);

  inline SensorMessage& operator=(const SensorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorMessage(SensorMessage&& from) noexcept
    : SensorMessage() {
    *this = ::std::move(from);
  }

  inline SensorMessage& operator=(SensorMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorMessage* internal_default_instance() {
    return reinterpret_cast<const SensorMessage*>(
               &_SensorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SensorMessage* other);
  friend void swap(SensorMessage& a, SensorMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorMessage* New() const final {
    return CreateMaybeMessage<SensorMessage>(NULL);
  }

  SensorMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SensorMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SensorMessage& from);
  void MergeFrom(const SensorMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SensorMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ssigmaapi.type.UserActivity activities = 2;
  int activities_size() const;
  void clear_activities();
  static const int kActivitiesFieldNumber = 2;
  ::ssigmaapi::type::UserActivity* mutable_activities(int index);
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::UserActivity >*
      mutable_activities();
  const ::ssigmaapi::type::UserActivity& activities(int index) const;
  ::ssigmaapi::type::UserActivity* add_activities();
  const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::UserActivity >&
      activities() const;

  // string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:ssigmaapi.productibit.v1.SensorMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::UserActivity > activities_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SensorMessage

// string uid = 1;
inline void SensorMessage::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SensorMessage::uid() const {
  // @@protoc_insertion_point(field_get:ssigmaapi.productibit.v1.SensorMessage.uid)
  return uid_.GetNoArena();
}
inline void SensorMessage::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ssigmaapi.productibit.v1.SensorMessage.uid)
}
#if LANG_CXX11
inline void SensorMessage::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ssigmaapi.productibit.v1.SensorMessage.uid)
}
#endif
inline void SensorMessage::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ssigmaapi.productibit.v1.SensorMessage.uid)
}
inline void SensorMessage::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ssigmaapi.productibit.v1.SensorMessage.uid)
}
inline ::std::string* SensorMessage::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:ssigmaapi.productibit.v1.SensorMessage.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SensorMessage::release_uid() {
  // @@protoc_insertion_point(field_release:ssigmaapi.productibit.v1.SensorMessage.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SensorMessage::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:ssigmaapi.productibit.v1.SensorMessage.uid)
}

// repeated .ssigmaapi.type.UserActivity activities = 2;
inline int SensorMessage::activities_size() const {
  return activities_.size();
}
inline ::ssigmaapi::type::UserActivity* SensorMessage::mutable_activities(int index) {
  // @@protoc_insertion_point(field_mutable:ssigmaapi.productibit.v1.SensorMessage.activities)
  return activities_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::UserActivity >*
SensorMessage::mutable_activities() {
  // @@protoc_insertion_point(field_mutable_list:ssigmaapi.productibit.v1.SensorMessage.activities)
  return &activities_;
}
inline const ::ssigmaapi::type::UserActivity& SensorMessage::activities(int index) const {
  // @@protoc_insertion_point(field_get:ssigmaapi.productibit.v1.SensorMessage.activities)
  return activities_.Get(index);
}
inline ::ssigmaapi::type::UserActivity* SensorMessage::add_activities() {
  // @@protoc_insertion_point(field_add:ssigmaapi.productibit.v1.SensorMessage.activities)
  return activities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ssigmaapi::type::UserActivity >&
SensorMessage::activities() const {
  // @@protoc_insertion_point(field_list:ssigmaapi.productibit.v1.SensorMessage.activities)
  return activities_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace productibit
}  // namespace ssigmaapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ssigmaapi_2fproductibit_2fv1_2fproductibit_2eproto
